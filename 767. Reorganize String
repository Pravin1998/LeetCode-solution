class Solution {
    public char getmaxcount(int count[]){
        int maxcount = 0;
        char max_char = 0;
        for(int i=0; i<26; i++){
            if(count[i] > maxcount){
                maxcount = count[i];
                max_char = (char)(i+'a');
            }
        }
        return max_char;
    }
    public String reorganizeString(String s) {
        int n = s.length();
        if(n == 0){
            return "";
        }
        int count[] = new int[26];
        for(char ch : s.toCharArray()){
            count[ch-'a']++;
        }

        char max_char = getmaxcount(count);
        int maxcount = count[max_char - 'a'];

      //check our result is possible or not
        if(maxcount > (n+1)/2){
            return "";
        }
        //first we store the maxfreq character in a even position
        String res = "";
        for(int i=0; i <n; i++){
            res = res + ' ';
        }

        int ind = 0;
        while(maxcount>0){
            res = res.substring(0,ind)+max_char+res.substring(ind+1);
            ind = ind+2;
            maxcount--;
        }
        count[max_char - 'a'] = 0;

        //other remaining character in even position after the odd position
        for(int i=0; i<26;i++){
            while(count[i] > 0){
                ind = (ind>=n)?1:ind;
                res = res.substring(0,ind)+(char)(i+'a')+res.substring(ind+1);
                ind = ind+2;
                count[i]--;


            }
        }
        return res;


    }
}

    //TC = O(N), SC =O(N)
