class Solution {
    public int maxSubarraySumCircular(int[] a) {
        
        int total = 0;
        int maxsubarraysum = Integer.MIN_VALUE;
        int minsubarraysum = Integer.MAX_VALUE;

        int maxtrain = 0;
        int mintrain = 0;

        for(int i=0;i<a.length;i++){
            total = total + a[i];

            //we have to find the max subarray sum
            int prevmaxtrain = maxtrain + a[i];
            int newmaxtrain = a[i];

            maxtrain = Math.max(prevmaxtrain,newmaxtrain);
            maxsubarraysum = Math.max(maxtrain,maxsubarraysum);

            //we have to find the min subarray sum
            int prevmintrain = mintrain + a[i];
            int newmintrain = a[i];

            mintrain = Math.min(prevmintrain,newmintrain);
            minsubarraysum = Math.min(mintrain,minsubarraysum);
        }
        

        //if all the element in array are -ve
        
        if(total == minsubarraysum) return maxsubarraysum;

        //if answers in array itself
        int itself = maxsubarraysum;

        //wrap around
        int wraparound = total - minsubarraysum;

        return Math.max(itself,wraparound);

    }
}
